spring:
  application:
    name: fgsc-gateway

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL}
    register-with-eureka: false
    fetch-registry: true
  instance:
    prefer-ip-address: true
    app-group-name: fgsc
    appname: gateway
    healthcheck:
      enabled: true
zuul:
  prefix: /api
  ignored-services: "*"
  host:
    connect-timeout-millis: 60000
    max-per-route-connections: 10000
    max-total-connections: 5000
    socket-timeout-millis: 60000
  semaphore:
    max-semaphores: 500
  strip-prefix: true
  ribbon:
    eager-load:
      enabled: true
  # TODO : REMOVE ONCE YOU FIGURE OUT CLIENT SIDE LOAD BALANCING
  routes:
    sensitiveHeaders: Cookie,Set-Cookie,Authorization
    auth-service:
      path: /auth/**
      serviceId: auth
      stripPrefix: true
      url: https://fgsc-auth-service.herokuapp.com
    users-service:
      path: /users/**
      serviceId: users
      stripPrefix: true
      url: https://fgsc-users-microservice.herokuapp.com
    messaging-socket-service:
      path: /rs/**
      serviceId: messaging-socket-service
      stripPrefix: true
      # TODO : REPLACE URL
      url: https://warm-falls-36309.herokuapp.com
    conges-service:
      path: /conges/**
      serviceId: conges-service
      stripPrefix: true
      url: https://conges-microservice.herokuapp.com/
ribbon:
  eureka:
    enabled: true
  ConnectTimeout: 10000
  ReadTimeout: 60000

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
        thread:
          timeoutInMilliseconds: 40000

# TODO : Delete the following if you figure out how to load balance automatically by client side eureka discovery
auth-service-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://fgsc-auth-service.herokuapp.com
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100

users-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://fgsc-users-microservice.herokuapp.com
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100

# TODO : REPLACE URL
messaging-socket-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://warm-falls-36309.herokuapp.com
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100

conges-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://conges-microservice.herokuapp.com/
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100
employee-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://employee-microservices.herokuapp.com/
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100
projet-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://projet-microservice.herokuapp.com/
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100
attendance-service:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: https://attendance-microservices.herokuapp.com/
    ConnectTimeout: 1000
    ReadTimeout: 3000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100
